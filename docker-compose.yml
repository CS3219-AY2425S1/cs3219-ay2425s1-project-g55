services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    networks:
      - app-network
    depends_on:
      - backend-service-question
      - backend-service-user

  backend-service-question:
    build:
      context: ./backend/service-question
    container_name: backend-service-question
    ports:
      - "8080:8080"
    networks:
      - app-network
  #    environment:
  #      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/
  #      - SPRING_DATA_MONGODB_DATABASE=question_db
  #      - SPRING_DATA_MONGODB_URI=mongodb+srv://tester:tester-peerprep@peerprep-cluster.gftor.mongodb.net/?retryWrites=true&w=majority&appName=peerprep-cluster
  #      - SPRING_DATA_MONGODB_DATABASE=question_db
  #    depends_on:
  #      - mongodb

  backend-service-user:
    build:
      context: ./backend/service-user
    container_name: backend-service-user
    ports:
      - "8081:8081"
    networks:
      - app-network

#  mongodb:
#    image: mongo:latest
#    container_name: mongodb
#    ports:
#      - "27017:27017"
#    networks:
#      - app-network
#    environment:
#      MONGO_INITDB_DATABASE: question_db
#      MONGODB_ENABLE_LOGGING: 1
#    volumes:
#      - ./backend/mongoDB/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
#      - mongodb_data:/data/db

networks:
  app-network:
    driver: bridge
#volumes:
#  mongodb_data:
