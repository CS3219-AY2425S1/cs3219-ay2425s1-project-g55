location = /auth/websocket {
    internal;
    proxy_pass http://backend-service-user:8080/api/auth/verify-token;

    # Don't forward the request body to the auth service
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;

    if ($auth_token = "" ) {
        return 401;
    }

    # Set the auth header here because `proxy_set_header`
    # set in the location is for the proxied request, not the original
    proxy_set_header Authorization "Bearer $auth_token";
    # proxy_pass_request_headers on;
}

location /ws/matching {
    include includes/cors.conf;
    include includes/web-socket-params.conf;

    set $auth_token $arg_token;

    auth_request /auth/websocket;
    include includes/auth-params.conf;

    proxy_pass http://backend-service-matching:8080/ws/matching;
}

location /ws/rooms {
    include includes/cors.conf;
    include includes/web-socket-params.conf;

    set $auth_token $arg_token;

    auth_request /auth/websocket;
    include includes/auth-params.conf;

    proxy_pass http://backend-service-room:8080/ws/rooms;
}

location /ws/collaborative-editor {
    include includes/cors.conf;
    include includes/web-socket-params.conf;

    set $auth_token $arg_token;

    auth_request /auth/websocket;
    include includes/auth-params.conf;

    proxy_pass http://backend-service-collaborative-editor:8080/ws/collaborative-editor;
}

location /ws/signaling {
    include includes/cors.conf;
    include includes/web-socket-params.conf;

    set $auth_token $arg_token;

    auth_request /auth/websocket;
    include includes/auth-params.conf;

    proxy_pass http://backend-service-video:8080/ws/signaling;
}